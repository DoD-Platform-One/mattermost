apiVersion: installation.mattermost.com/v1beta1
kind: Mattermost
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{ include "mattermost.labels" . | nindent 4 }}
    app.kubernetes.io/component: "instance"
spec:
  image: {{ .Values.image.name }}
  imagePullPolicy: {{ .Values.image.imagePullPolicy }}

  size: {{ .Values.users }}users
  version: {{ .Values.image.tag }}
  replicas: {{ .Values.replicaCount }}

  {{- if .Values.istio.chat.hosts }}
  ingressName: {{ tpl (index .Values.istio.chat.hosts 0) $ }}
  {{- else }}
  ingressName: "chat.bigbang.dev"
  {{- end }}

  {{- if and .Values.enterprise.enabled .Values.enterprise.license }}
  licenseSecret: "mattermost-license"
  {{- end }}

  {{- if or .Values.mattermostEnvs .Values.sso.enabled .Values.minio.install .Values.existingSecretEnvs }}
  mattermostEnv:
  {{- range $k, $v := .Values.mattermostEnvs }}
  - name: {{ $k }}
    valueFrom:
      secretKeyRef:
        key: {{ $k }}
        name: "mattermost-envs"
  {{- end }}
  {{- if .Values.sso.enabled }}
  - name: MM_GITLABSETTINGS_ENABLE
    valueFrom:
      secretKeyRef:
        key: MM_GITLABSETTINGS_ENABLE
        name: "mattermost-envs"
  - name: MM_GITLABSETTINGS_ID
    valueFrom:
      secretKeyRef:
        key: MM_GITLABSETTINGS_ID
        name: "mattermost-envs"
  - name: MM_GITLABSETTINGS_SECRET
    valueFrom:
      secretKeyRef:
        key: MM_GITLABSETTINGS_SECRET
        name: "mattermost-envs"
  - name: MM_GITLABSETTINGS_AUTHENDPOINT
    valueFrom:
      secretKeyRef:
        key: MM_GITLABSETTINGS_AUTHENDPOINT
        name: "mattermost-envs"
  - name: MM_GITLABSETTINGS_TOKENENDPOINT
    valueFrom:
      secretKeyRef:
        key: MM_GITLABSETTINGS_TOKENENDPOINT
        name: "mattermost-envs"
  - name: MM_GITLABSETTINGS_USERAPIENDPOINT
    valueFrom:
      secretKeyRef:
        key: MM_GITLABSETTINGS_USERAPIENDPOINT
        name: "mattermost-envs"
  {{- end }}
  {{- if .Values.minio.install }}
  - name: MM_FILESETTINGS_AMAZONS3SSL
    valueFrom:
      secretKeyRef:
        key: MM_FILESETTINGS_AMAZONS3SSL
        name: "mattermost-envs"
  {{- end }}
  {{- range .Values.existingSecretEnvs }}
  - {{ tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- end }}

  # Give MM enough time to keel over if needed
  probes:
    livenessProbe:
      initialDelaySeconds: 120
      periodSeconds: 120

  scheduling:
    resources:
    {{- toYaml .Values.resources | nindent 6 }}

    {{- if .Values.affinity }}
    affinity:
      {{ toYaml .Values.affinity | nindent 6 }}
    {{- end }}

    {{- if .Values.nodeSelector }}
    nodeSelector:
      {{ toYaml .Values.nodeSelector | nindent 6 }}
    {{- end }}  

  database:
    external:
      secret: {{ .Values.database.secret | default (printf "%s-dbcreds" (include "mattermost.fullname" .)) }}

  fileStore:
    external:
      url: {{ .Values.fileStore.url | default (printf "%s:9000" .Values.minio.service.nameOverride) }}
      bucket: {{ .Values.fileStore.bucket | default "mattermost" }}
      secret: {{ .Values.fileStore.secret | default "mattermost-objstore-creds" }}
